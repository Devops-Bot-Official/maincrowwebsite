version: '1.0'
mode: remote
identifier: AzureCrowRunner
category: Production
username: crowuser
environment:
  # === Crowstore-backed values ===
  SOURCE_URL:   { value: crowstore://MAINFRONTEND_URL }
  GIT_TOKEN:    { value: crowstore://gittoken }
  
  DOCKER_USERNAME:    { value: crowstore://CROWREGNAME }
  DOCKER_PASSWORD:    { value: crowstore://CROWREGNAMEPASS }

  IMAGE_NAME:    { value: crowstore://MAINIMAGE }

  # These must match the *names after* crowstore:// exactly (uppercased, no extra underscores).
  CROWSTORE_TOKEN_MAINFRONTEND_URL:   { value: 69e8fd127c2d5341fbb05dca396bba74 }

  CROWSTORE_TOKEN_GITTOKEN:    { value: ee63e33b6b98a72756d732e115a5d256 }
 
  CROWSTORE_TOKEN_CROWREGNAME: { value: 59618baf11885921fbcb491b420b0856 }
  CROWSTORE_TOKEN_CROWREGNAMEPASS: { value: 03ba3a029d583c5c73c4464a9f85cd1d }
  
  CROWSTORE_TOKEN_MAINIMAGE: { value: ebfd5174140d3324199d037c6aa10c50 }

jobs:
- name: CROW PROD MAIN WEBSITE BUILD
  stages:
  - name: Updating Azure Server
    tasks:
      shell:
        enabled: true
        shell: bash
        steps:
        - sudo apt-get update -y
  # ======== Core: Checkout (invokes your Python helper under the hood new) ========
  - name: Git Checkout one
    tasks:
      checkout:
        enabled: true
        private_repo: true
        # --- required / important fields your function expects ---
        clone_dir: /home/crowuser/main
        source_url: env=SOURCE_URL
        branches: 
        - master
        provider: github
        username: Devops-Bot-Official
        token: env=GIT_TOKEN

  # 1) Install ALL deps (including dev) â€” no NODE_ENV here
  - name: NPM | Install dev deps
    tasks:
      npm:
        enabled: true
        working_directory: "/home/crowuser/main"
        # DO NOT set node_env here
        clean_node_modules: true         # optional but recommended after Node upgrade
        omit_dev: false                  # ensure dev deps are allowed
        ignore_scripts: false
        legacy_peer_deps: false
        env:                              # force npm to include dev even if env is
          npm_config_production: "false"
        steps:
          install: true
          build: false
          test: false
          install_args: ["--include=dev", "--no-audit", "--no-fund"]
          build_args: []
          test_args: []
          scripts: []
  
  # 2) Build with production env (now vite is present locally)
  - name: NPM | Install, build
    tasks:
      npm:
        enabled: true
        working_directory: "/home/crowuser/main"
        node_env: "production"           # only for the build step
        omit_dev: false                  # irrelevant here; we are not instal
        steps:
          install: false
          build: true
          test: false
          build_script: "build"
          build_args: []
          scripts: []           
            
  - name: Image Build Stage
    tasks:
      docker_build:
        enabled: true
        image_name: env=IMAGE_NAME
        build_tag: V.0.0.3
        dockerfile_path: /home/crowuser/main/Dockerfile     
                         
          
  - name: docker push stage
    tasks:
      docker_push:
        enabled: true
        provider: azure
        image_name: env=IMAGE_NAME
        image_tag: V.0.0.3
        username: env=DOCKER_USERNAME
        password: env=DOCKER_PASSWORD
